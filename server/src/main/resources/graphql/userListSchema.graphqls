type UserList {
  id: ID!
  ownerId: String!
  name: String!
  items: [UserListItem]
  ratingSystem: RatingSystem
}

type EmbeddedUserList {
  id: ID!
  name: String!
}

type UserListItem {
  mediaID: Int!
  watchStatus: String!
  rating: UserListRating
}

type UserListRating {
  displayRating: String!
  rating: Float!
  subRatings: [UserListSubRating!]!
}

enum WatchStatus {
  PLAN_TO_WATCH
  WATCHING
  ON_HOLD
  COMPLETED
  DROPPED
}

type UserListSubRating {
  id: Int!
  displayRating: String
  rating: Float!
}

input CreateUserListInput {
  name: String!
}

input AddUserListItemInput {
  listId: String!
  mediaID: Int!
  watchStatus: WatchStatus!
  subRatings: [UserListSubRatingInput]
}

input UpdateUserListItemInput {
  listId: String!
  mediaID: Int!
  watchStatus: WatchStatus!
  subRatings: [UserListSubRatingInput]!
}

input UserListSubRatingInput {
  id: Int!
  rating: Float!
}